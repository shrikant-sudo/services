package com.springbackend.application.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.springbackend.application.model.Product;
import com.springbackend.application.service.ProductService;
s


@RestController
@RequestMapping("/api")
public class SpringController {
	
	private ProductService productService;

	public SpringController(ProductService productService) {
		super();
		this.productService = productService;
	}
	

	@PostMapping("/save-product")
	public ResponseEntity<Product> saveProduct(@RequestBody Product product){
		return new ResponseEntity<Product>(productService.saveProduct(product), HttpStatus.CREATED);
	}
	// build get all employees REST API
	@GetMapping("products/")
	public List<Product> getAllEmployees(){
		return productService.getAllProducts();
	}
	
	// build get employee by id REST API
	// http://localhost:8080/api/employees/1
	@GetMapping("get/{id}")
	public ResponseEntity<Product> getProductById(@PathVariable("id") long productId) {
		return new ResponseEntity<Product>(productService.getProductById(productId), HttpStatus.OK);
	}
	
	
	// build update employee REST API
	// http://localhost:8080/api/employees/1
	@PutMapping("update/{id}")
	public ResponseEntity<Product> updateEmployee(@PathVariable("id") long id ,@RequestBody Product product){
		return new ResponseEntity<Product>(productService.updateEmployee(product, id), HttpStatus.OK);
	}
	
	
	// build delete employee REST API
	// http://localhost:8080/api/employees/1
	@DeleteMapping("delete/{id}")
	public ResponseEntity<String> deleteEmployee(@PathVariable("id") long id){
		
		// delete employee from DB
		employeeService.deleteEmployee(id);
		
		return new ResponseEntity<String>("Employee deleted successfully!.", HttpStatus.OK);
	}
}
